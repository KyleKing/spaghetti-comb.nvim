*spaghetti-comb.txt*  Code exploration and relationship visualization

==============================================================================
CONTENTS                                              *spaghetti-comb-contents*

    1. Introduction ........................ |spaghetti-comb-introduction|
    2. Installation ........................ |spaghetti-comb-installation|
    3. Setup ............................... |spaghetti-comb-setup|
    4. Configuration ....................... |spaghetti-comb-configuration|
    5. Commands ............................ |spaghetti-comb-commands|
    6. Key Mappings ........................ |spaghetti-comb-keymaps|
    7. Usage ............................... |spaghetti-comb-usage|
    8. API Reference ....................... |spaghetti-comb-api|
    9. Troubleshooting ..................... |spaghetti-comb-troubleshooting|

==============================================================================
INTRODUCTION                                      *spaghetti-comb-introduction*

Spaghetti Comb is a Neovim plugin designed to help developers untangle complex
codebases by visualizing code relationships and dependencies. The name is a 
playful reference to "spaghetti code" - this plugin serves as a "comb" to help
untangle and understand intricate code relationships.

Key Features:
- LSP-powered symbol analysis with references, definitions, and call hierarchy
- Split window Relations panel with vim motion navigation  
- Navigation stack with bidirectional history
- Focus mode with side-by-side code previews
- Coupling analysis with numerical indicators ([C:0.7])
- Bookmark system with collections and persistence
- Session management for exploration state
- Multi-language support (TypeScript, JavaScript, Python, Rust, Go, Lua)

Requirements:
- Neovim >= 0.8.0
- LSP server configured for your language
- (Optional) Treesitter for enhanced fallback support

==============================================================================
INSTALLATION                                      *spaghetti-comb-installation*

Using lazy.nvim: >lua
    {
      'your-username/spaghetti-comb.nvim',
      config = function()
        require('spaghetti-comb').setup()
      end
    }
<

Using packer.nvim: >lua
    use {
      'your-username/spaghetti-comb.nvim',
      config = function()
        require('spaghetti-comb').setup()
      end
    }
<

Manual installation:
1. Clone the repository to your Neovim data directory
2. Add the plugin to your runtime path
3. Call setup() in your init.lua

==============================================================================
SETUP                                                    *spaghetti-comb-setup*

Basic setup: >lua
    require('spaghetti-comb').setup()
<

Custom configuration: >lua
    require('spaghetti-comb').setup({
      relations = {
        height = 20,          -- Relations panel height (default: 15)
        focus_height = 40,    -- Height in focus mode (default: 30)
        position = 'bottom',  -- Panel position (default: 'bottom')
        auto_preview = true,  -- Auto-update preview (default: true)
        show_coupling = true  -- Show coupling metrics (default: true)
      },
      keymaps = {
        show_relations = '<leader>cr',  -- Custom key mapping
        find_references = '<leader>cf'
      },
      logging = {
        silent_mode = false,  -- Show info messages (default: true)
        show_debug = true     -- Show debug messages (default: false)
      }
    })
<

==============================================================================
CONFIGURATION                                    *spaghetti-comb-configuration*

                                                    *spaghetti-comb-config-relations*
relations~
    Configuration for the Relations panel display.

    • height (number): Normal split height in lines (default: 15)
    • focus_height (number): Expanded height in focus mode (default: 30)
    • position (string): Split position, currently only 'bottom' (default: 'bottom')
    • auto_preview (boolean): Auto-update preview in focus mode (default: true)
    • show_coupling (boolean): Show coupling metrics [C:0.7] (default: true)

                                                    *spaghetti-comb-config-logging*
logging~
    Logging system configuration.

    • silent_mode (boolean): Reduce noise by hiding info messages (default: true)
    • show_debug (boolean): Show debug messages (default: false)
    • show_trace (boolean): Show trace messages (default: false)

                                                   *spaghetti-comb-config-languages*
languages~
    Language-specific settings.

    • typescript.enabled (boolean): Enable TypeScript support (default: true)
    • typescript.coupling_analysis (boolean): Enable coupling analysis (default: true)
    • javascript.enabled (boolean): Enable JavaScript support (default: true)
    • python.enabled (boolean): Enable Python support (default: true)
    • rust.enabled (boolean): Enable Rust support (default: true)
    • go.enabled (boolean): Enable Go support (default: true)

                                                     *spaghetti-comb-config-keymaps*
keymaps~
    Key mapping configuration. All mappings can be customized.

    • show_relations (string): Show Relations panel (default: '<leader>sr')
    • find_references (string): Find references (default: '<leader>sf')
    • go_definition (string): Go to definition (default: '<leader>sd')
    • navigate_next (string): Navigate forward (default: '<leader>sn')
    • navigate_prev (string): Navigate backward (default: '<leader>sp')
    • save_session (string): Save session (default: '<leader>ss')
    • load_session (string): Load session (default: '<leader>sl')
    • bookmark_current (string): Bookmark current symbol (default: '<leader>sb')

                                                    *spaghetti-comb-config-coupling*
coupling~
    Coupling analysis configuration.

    • enabled (boolean): Enable coupling analysis (default: true)
    • threshold_high (number): High coupling threshold (default: 0.7)
    • threshold_medium (number): Medium coupling threshold (default: 0.4)
    • show_metrics (boolean): Show numerical metrics (default: true)

==============================================================================
COMMANDS                                              *spaghetti-comb-commands*

                                                         *:SpaghettiCombShow*
:SpaghettiCombShow                  Show Relations panel for symbol under cursor.
                                   This is the main command to start code exploration.

                                                   *:SpaghettiCombReferences*  
:SpaghettiCombReferences           Find all references to the current symbol.
                                   Shows where the symbol is used throughout the codebase.

                                                   *:SpaghettiCombDefinition*
:SpaghettiCombDefinition           Jump to the definition of the current symbol.
                                   Navigates to where the symbol is defined.

                                                       *:SpaghettiCombToggle*
:SpaghettiCombToggle               Toggle Relations panel visibility.
                                   Show/hide the Relations panel.

                                                         *:SpaghettiCombNext*
:SpaghettiCombNext                 Navigate forward in the exploration stack.
                                   Move to the next symbol in navigation history.

                                                         *:SpaghettiCombPrev*
:SpaghettiCombPrev                 Navigate backward in the exploration stack.
                                   Move to the previous symbol in navigation history.

                                                  *:SpaghettiCombSaveSession*
:SpaghettiCombSaveSession {name}   Save current exploration session.
                                   Preserves navigation stack and window state.

                                                  *:SpaghettiCombLoadSession*
:SpaghettiCombLoadSession {name}   Load exploration session.
                                   Restores saved navigation state.

                                             *:SpaghettiCombCallHierarchyIncoming*
:SpaghettiCombCallHierarchyIncoming  Show incoming calls (who calls this function).
                                    Displays functions that call the current symbol.

                                             *:SpaghettiCombCallHierarchyOutgoing*
:SpaghettiCombCallHierarchyOutgoing  Show outgoing calls (what this function calls).
                                    Displays functions called by the current symbol.

                                               *:SpaghettiCombBookmarkCurrent*
:SpaghettiCombBookmarkCurrent      Bookmark the current symbol.
                                   Add current location to bookmarks for quick access.

==============================================================================
KEY MAPPINGS                                          *spaghetti-comb-keymaps*

Global Key Mappings~
(Default mappings, can be customized in setup)

    <leader>sr    Show Relations panel for symbol under cursor
    <leader>sf    Find all references to current symbol  
    <leader>sd    Go to symbol definition
    <leader>sn    Navigate forward in exploration stack
    <leader>sp    Navigate backward in exploration stack
    <leader>ss    Save current exploration session
    <leader>sl    Load exploration session
    <leader>sb    Bookmark current symbol
    <leader>sci   Show incoming call hierarchy
    <leader>sco   Show outgoing call hierarchy

Relations Panel Key Mappings~
(Active when Relations panel is focused)

    <CR>          Navigate to selected location
    <C-]>         Explore selected symbol deeper (recursive exploration)
    <C-o>         Navigate back in stack
    <Tab>         Toggle focus mode (expand window + show preview)
    m             Toggle bookmark for selected item
    c             Show coupling metrics for selected item
    /             Search/filter relations
    f             Cycle coupling filter (all/high/medium/low)
    s             Cycle sort mode (default/coupling/file/line)
    b             Toggle bookmarked items only
    r             Reset all filters
    q             Close Relations panel
    <Esc>         Close Relations panel

Focus Mode (when <Tab> is pressed)~
    j/k           Navigate relations (preview updates automatically)
    <Tab>         Exit focus mode (return to normal size)
    
All vim motions work within the Relations panel (j/k, gg/G, /search, etc.)

==============================================================================
USAGE                                                    *spaghetti-comb-usage*

Basic Workflow~

1. Position cursor on a symbol (function, variable, class, etc.)
2. Press `<leader>sr` or run `:SpaghettiCombShow`
3. Relations panel opens showing:
   - References: Where the symbol is used
   - Definitions: Where the symbol is defined  
   - Call hierarchy: Function call relationships
4. Navigate with j/k or arrow keys
5. Press <CR> to jump to a location
6. Press <C-]> to explore that symbol deeper
7. Use <C-o> to go back in navigation history

Advanced Features~

Focus Mode:
- Press <Tab> in Relations panel to enter focus mode
- Panel expands and shows code preview on the right
- Navigate with j/k to see different code contexts
- Press <Tab> again to exit focus mode

Coupling Analysis:
- Coupling scores [C:0.7] indicate relationship strength
- 0.0-0.4: Low coupling (green)
- 0.4-0.7: Medium coupling (orange)  
- 0.7-1.0: High coupling (red)
- Use 'f' key to filter by coupling level

Bookmarks:
- Press 'm' on any relation to bookmark it
- Press 'b' to show only bookmarked items
- Bookmarks persist across sessions

Session Management:
- Save exploration state with `:SpaghettiCombSaveSession <name>`
- Load saved sessions with `:SpaghettiCombLoadSession <name>`
- Sessions include navigation stack and window layout

==============================================================================
API REFERENCE                                            *spaghetti-comb-api*

setup({config})                                     *spaghetti-comb.setup()*
    Setup the plugin with optional configuration.

    Parameters: ~
        {config} (table|nil) Configuration table

    Usage: ~
>lua
        require('spaghetti-comb').setup({
          relations = {
            height = 20
          }
        })
<

get_config()                                     *spaghetti-comb.get_config()*
    Get the current plugin configuration.

    Returns: ~
        (table) Current configuration

get_state()                                       *spaghetti-comb.get_state()*
    Get the current plugin state.

    Returns: ~
        (table) Current plugin state including navigation stack

==============================================================================
TROUBLESHOOTING                              *spaghetti-comb-troubleshooting*

No Relations Found~
- Ensure LSP server is running for your file type
- Check that the symbol under cursor is recognized by LSP
- Try positioning cursor directly on the symbol name
- Verify file is saved (some LSP servers require saved files)

Panel Not Opening~
- Check for conflicting key mappings with `:verbose map <leader>sr`
- Ensure plugin is properly installed and setup() was called
- Check for errors with `:messages`

Poor Performance~
- Large codebases may cause slower LSP responses
- Enable silent_mode to reduce logging overhead
- Consider using coupling analysis selectively

LSP Errors~
- Check LSP server is configured correctly with `:LspInfo`
- Ensure LSP server supports the required methods:
  - textDocument/references
  - textDocument/definition
  - callHierarchy/incomingCalls (optional)
  - callHierarchy/outgoingCalls (optional)

Fallback Methods~
If LSP is unavailable, the plugin falls back to:
1. Treesitter-based symbol extraction
2. Grep-based text search

For more help, check the plugin's GitHub repository or open an issue.

==============================================================================
vim:tw=78:ts=8:noet:ft=help:norl: